spring:
  profiles:
    # springboot会安装application-{profile}的命名规范来匹配环境，从而加载对应的配置文件
    active: dev
  datasource: # 数据源相关的配置节点
    type: com.zaxxer.hikari.HikariDataSource # 指定数据源的类型 HikariDataSource
    #         type: com.alibaba.druid.pool.DruidDataSource     # 自定义Druid数据源
    #    driver-class-name: com.mysql.cj.jdbc.Driver # mysql驱动
    #    url:
    #    username:
    #    password:
    hikari:
      connection-timeout: 30000 # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 默认:30秒
      minimum-idle: 5 # 最小连接数
      maximum-pool-size: 20 # 最大连接数
      auto-commit: true # 自动提交
      idle-timeout: 600000 # 连接超时的最大时长（毫秒），超时则被释放（retired），默认:10分钟
      pool-name: DateSourceHikariCP # 连接池名字
      max-lifetime: 1800000 # 连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认:30分钟 1800000ms
      connection-test-query: SELECT 1
  servlet:
    multipart:
      max-file-size: 5MB # 每个文件最大上传限制（超出就报错）
  #            max-request-size: 5MB # 文件最大请求限制（一般用于批量）
  banner:
    #    image:
    #      location: classpath:banner/logo.jpg
    #      pixelmode: block # 默认text，会把图片转为文本显示
    location: classpath:banner/logo.txt # 直接用文本作为logo就好了（也可以自己找网站图片转文本）
  #  mvc:
  #   static-path-pattern: /ccc/** # 默认是/** 也就是【ip:port/资源名】，改过之后就是【ip:port/ccc/资源名】
  thymeleaf:
    prefix: classpath:/templates/ # 默认是这个
    suffix: .html # 默认是这个

# Mybatis 配置
mybatis:
  type-aliases-package: com.soladuor.pojo # 数据库表逆向后一一映射的实体类【pojo,bean,entity】
  mapper-locations: classpath:mapper/*.xml # mapper映射文件的位置
  configuration: # 在开发环境的配置文件中写了
    map-underscore-to-camel-case: true # 开启驼峰命名法
    # 注：生产环境不建议打开日志，因为会产生大量的SQL日志，导致难以分析bug
#        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # 开启mybatis日志

# 通用 mapper 设置
mapper:
  #    mappers: com.soladuor.my.mapper.MyMapper # 所有Mapper都需要实现的接口
  not-empty: false # 操作数据库判断一个属性是否为空时，是否需要自动追加不为空字符串的判断【也就是userName!=null后面要不要userName!=''】
  identity: MYSQL # 配置数据库方言

# 分页插件配置
pagehelper:
  helper-dialect: mysql # 配值数据库方言
  support-methods-arguments: true # 一些参数支持
